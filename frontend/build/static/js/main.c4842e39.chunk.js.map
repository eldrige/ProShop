{"version":3,"sources":["components/SearchBox.js","actions/userActions.js","constants/userConstants.js","components/Header.js","constants/orderConstants.js","components/Footer.js","components/Rating.js","components/Product.js","actions/productActions.js","constants/productConstants.js","components/Loader.js","components/Message.js","components/Paginate.js","components/Meta.js","components/ProductCarousel.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","constants/cartConstants.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegistrationScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckOutSteps.js","screens/ShippingScreen.js","screens/PaymentsScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/orderListScreen.js","App.js","serviceWorker.js","store.js","reducers/productReducer.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","index.js"],"names":["SearchBox","history","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","inline","Control","type","name","onChange","target","value","placeholder","className","Button","variant","getUserDetails","id","dispatch","getState","a","userInfo","userLogin","config","headers","Authorization","token","axios","get","data","payload","localStorage","setItem","JSON","stringify","response","message","Header","useDispatch","useSelector","state","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","render","Nav","Link","NavDropdown","title","Item","onClick","removeItem","isAdmin","Footer","Row","Col","Rating","text","color","style","defaultProps","Product","product","Card","_id","Img","src","image","vairant","Body","Title","as","Text","rating","numReviews","price","toFixed","listProducts","pageNumber","listProductDetails","Loader","Spinner","animation","role","width","height","margin","display","Message","children","Alert","Paginate","pages","page","Pagination","Array","keys","map","x","key","active","Meta","description","keywords","Helmet","content","ProductCarousel","productTopRated","products","loading","error","useEffect","Carousel","pause","Image","alt","fluid","Caption","HomeScreen","match","params","productList","sm","md","lg","xl","ProductScreen","qty","setQty","setRating","comment","setComment","productDetails","productReviewCreate","successReview","success","errorReview","alert","console","log","ListGroup","countInStock","disabled","reviews","length","review","createdAt","substring","productId","post","Group","controlId","Label","row","addToCart","cart","cartItems","CartScreen","location","search","Number","split","removeFromCartHandler","removeFromCart","item","rounded","reduce","acc","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","login","controlid","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","userRegister","register","ProfileScreen","React","userDetails","errorDetails","user","userUpdateProfile","orderListMy","loadingOrders","errorOrders","orders","table","put","updateUserProfile","Table","striped","bordered","hover","responsive","order","totalPrice","isPaid","paidAt","Delivered","deliveredAt","CheckOutSteps","step1","step2","step3","step4","ShippingScreen","shippingAddress","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentsScreen","paymentMethod","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","ItemsPrice","taxPrice","orderCreate","index","createOrder","orderItems","OrderScreen","orderId","sdkReady","setSdkReady","orderDetails","orderPay","loadingPay","successPay","orderDeliver","loadingDeliver","successDeliver","pushState","addPayPalScript","clientId","script","document","createElement","async","onload","body","appendChild","window","paypal","href","isDelivered","amount","onSuccess","paymentResult","payOrder","deliverOrder","UserListScreen","userList","users","successDelete","userDelete","deleteHandler","confirm","delete","deleteUser","message0","UserEditScreen","userId","setIsAdmin","userUpdate","loadingUpdate","errorUpdate","successUpdate","updateUser","ProductListScreen","productDelete","loadingDelete","errorDelete","productCreate","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","createProductHandler","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","productUpdate","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","OrderListScreen","orderList","orderListAll","App","path","component","exact","Boolean","hostname","reducer","combineReducers","action","existItem","find","filter","succcess","cartItemsFromStorage","getItem","parse","userInfoFromStorage","userDetailsFromStorage","shippingAddresFromStorage","middleware","thunk","initialState","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.c4842e39.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\n\nconst SearchBox = ({ history }) => {\n  const [keyword, setKeyword] = useState('');\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (keyword.trim()) {\n      history.push(`/search/${keyword}`);\n    } else {\n      history.push('/');\n    }\n  };\n\n  return (\n    <Form onSubmit={submitHandler} inline>\n      <Form.Control\n        type=\"text\"\n        name=\"q\"\n        onChange={(e) => setKeyword(e.target.value)}\n        placeholder=\"Search Products...\"\n        className=\"mr-sm-2  ml-sm-5\"\n      ></Form.Control>\n      <Button type=\"submit\" variant=\"outline-success\" className=\"p-2\">\n        Search\n      </Button>\n    </Form>\n  );\n};\n\nexport default SearchBox;\n","import {\n  USER_LOGIN_FAILURE,\n  USER_LOGOUT,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_REGISTER_FAILURE,\n  USER_REGISTER_SUCCESS,\n  USER_REGISTER_REQUEST,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_SUCCESS,\n  USER_DETAILS_FAILURE,\n  USER_UPDATE_PROFILE_FAILURE,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_UPDATE_PROFILE_RESET,\n  USER_DETAILS_RESET,\n  USER_LIST_FAILURE,\n  USER_LIST_SUCCESS,\n  USER_LIST_REQUEST,\n  USER_LIST_RESET,\n  USER_DELETE_FAILURE,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_UPDATE_RESET,\n  USER_UPDATE_FAILURE,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_REQUEST,\n} from '../constants/userConstants';\n\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants';\nimport axios from 'axios';\n\nexport const login = (email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST,\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    const { data } = await axios.post(\n      '/api/users/login',\n      { email, password },\n      config\n    );\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    });\n\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAILURE,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const register = (name, email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST,\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    const { data } = await axios.post(\n      '/api/users/',\n      { name, email, password },\n      config\n    );\n\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data,\n    });\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    });\n\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAILURE,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n  //? we can get our user token, from user info which is found in the getState\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/users/${id}`, config);\n\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data,\n    });\n    localStorage.setItem('userDetails', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAILURE,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n  //? we can get our user token, from user info which is found in the getState\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.put(`/api/users/profile`, user, config);\n\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAILURE,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const listUsers = () => async (dispatch, getState) => {\n  //? we can get our user token, from user info which is found in the getState\n  try {\n    dispatch({\n      type: USER_LIST_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/users`, config);\n\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_LIST_FAILURE,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message0\n          : error.message,\n    });\n  }\n};\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n  //? we can get our user token, from user info which is found in the getState\n  try {\n    dispatch({\n      type: USER_DELETE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    await axios.delete(`/api/users/${id}`, config);\n\n    dispatch({\n      type: USER_DELETE_SUCCESS,\n    });\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: USER_DELETE_FAILURE,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n  //? we can get our user token, from user info which is found in the getState\n  try {\n    dispatch({\n      type: USER_UPDATE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.put(`/api/users/${user._id}`, user, config);\n\n    dispatch({\n      type: USER_UPDATE_SUCCESS,\n    });\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data });\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: USER_UPDATE_FAILURE,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const logout = () => (dispatch) => {\n  localStorage.removeItem('userInfo');\n  dispatch({ type: USER_LOGOUT });\n  dispatch({ type: USER_DETAILS_RESET });\n  dispatch({ type: ORDER_LIST_MY_RESET });\n  dispatch({ type: USER_LIST_RESET });\n  dispatch({ type: USER_UPDATE_PROFILE_RESET });\n};\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST';\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS';\nexport const USER_LOGIN_FAILURE = 'USER_LOGIN_FAILURE';\nexport const USER_LOGOUT = 'USER_LOGOUT';\n\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST';\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS';\nexport const USER_REGISTER_FAILURE = 'USER_REGISTER_FAILURE';\n\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST';\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS';\nexport const USER_DETAILS_FAILURE = 'USER_DETAILS_FAIURE';\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET';\n\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST';\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS';\nexport const USER_UPDATE_PROFILE_FAILURE = 'USER_UPDATE_PROFILE_FAILURE';\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET';\n\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST';\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS';\nexport const USER_LIST_FAILURE = 'USER_LIST_FAILURE';\nexport const USER_LIST_RESET = 'USER_LIST_RESET ';\n\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST';\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS';\nexport const USER_DELETE_FAILURE = 'USER_DELETE_FAILURE';\n\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST';\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS';\nexport const USER_UPDATE_FAILURE = 'USER_UPDATE_FAILURE';\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET';\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport SearchBox from './SearchBox';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { Navbar, Container, Nav, NavDropdown } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logout } from '../actions/userActions';\n\nconst Header = () => {\n  const dispatch = useDispatch();\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n  const logoutHandler = () => {\n    dispatch(logout());\n  };\n\n  return (\n    <header>\n      <Navbar bg=\"success\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\n        <Container>\n          <LinkContainer to=\"/\">\n            <Navbar.Brand>Pharmacie App</Navbar.Brand>\n          </LinkContainer>\n\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            {/* we cannt use SearchBox, with history directly, thats why we wrap it in Route */}\n            <Route render={({ history }) => <SearchBox history={history} />} />\n            <Nav className=\"ml-auto\">\n              <LinkContainer to=\"/cart\">\n                <Nav.Link>\n                  <i className=\"fas fa-shopping-cart\"></i> Cart\n                </Nav.Link>\n              </LinkContainer>\n              {userInfo ? (\n                <NavDropdown title={userInfo.name}>\n                  <LinkContainer to=\"/profile\">\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\n                  </LinkContainer>\n\n                  <NavDropdown.Item onClick={logoutHandler}>\n                    Logout\n                  </NavDropdown.Item>\n                </NavDropdown>\n              ) : (\n                <LinkContainer to=\"/login\">\n                  <Nav.Link>\n                    <i className=\"fas fa-user\"></i> Sign In\n                  </Nav.Link>\n                </LinkContainer>\n              )}\n              {userInfo && userInfo.isAdmin && (\n                <NavDropdown title=\"Admin\" id=\"adminmenu\">\n                  <LinkContainer to=\"/admin/userlist\">\n                    <NavDropdown.Item>Users</NavDropdown.Item>\n                  </LinkContainer>\n                  <LinkContainer to=\"/admin/productlist\">\n                    <NavDropdown.Item>Drugs</NavDropdown.Item>\n                  </LinkContainer>\n                  <LinkContainer to=\"/admin/orderlist\">\n                    <NavDropdown.Item>Orders</NavDropdown.Item>\n                  </LinkContainer>\n                </NavDropdown>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </header>\n  );\n};\n\nexport default Header;\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST';\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS';\nexport const ORDER_CREATE_FAILURE = 'ORDER_CREATE_FAILURE';\n\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST';\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS';\nexport const ORDER_DETAILS_FAILURE = 'ORDER_DETAILS_FAILURE';\n\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST';\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS';\nexport const ORDER_PAY_FAILURE = 'ORDER_PAY_FAILURE';\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET';\n\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST';\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS';\nexport const ORDER_LIST_MY_FAILURE = 'ORDER_LIST_MY_FAILURE';\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET';\n\nexport const ORDER_ALL_REQUEST = 'ORDER_ALL_REQUEST';\nexport const ORDER_ALL_SUCCESS = 'ORDER_ALL_SUCCESS';\nexport const ORDER_ALL_FAILURE = 'ORDER_ALL_FAILURE';\n\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST';\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS';\nexport const ORDER_DELIVER_FAILURE = 'ORDER_DELIVER_FAILURE';\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET';\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nconst Footer = () => {\n  return (\n    <footer>\n      <Container>\n        <Row>\n          <Col className=\"text-center py-3\">Copyright &copy; ProShop</Col>\n        </Row>\n      </Container>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Rating = ({ value, text, color }) => {\n  return (\n    <div className=\"rating\">\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 1\n              ? \"fas fa-star\"\n              : value >= 0.5\n              ? \"fas fa-star-half-alt\"\n              : \"fas fa-star\"\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 1\n              ? \"fas fa-star\"\n              : value >= 0.5\n              ? \"fas fa-star-half-alt\"\n              : \"fas fa-star\"\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 2\n              ? \"fas fa-star\"\n              : value >= 1.5\n              ? \"fas fa-star-half-alt\"\n              : \"fas fa-star\"\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 3\n              ? \"fas fa-star\"\n              : value >= 2.5\n              ? \"fas fa-star-half-alt\"\n              : \"fas fa-star\"\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 4\n              ? \"fas fa-star\"\n              : value >= 3.5\n              ? \"fas fa-star-half-alt\"\n              : \"fas fa-star\"\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 5\n              ? \"fas fa-star\"\n              : value >= 4.5\n              ? \"fas fa-star-half-alt\"\n              : \"fas fa-star\"\n          }\n        ></i>\n      </span>\n      <span>{text && text}</span>\n    </div>\n  );\n};\n\n// default props\n\nRating.defaultProps = {\n  color: \"#f8e825\",\n};\n\n// default prop types, lyk typescripts\n\nRating.propTypes = {\n  value: PropTypes.number.isRequired,\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string\n};\n\n// the proptypes applied to the compontn is in lowercase initially\nexport default Rating;\n","import React from 'react';\nimport { Card } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport Rating from './Rating';\n\nconst Product = ({ product }) => {\n  return (\n    <Card className=\"my-3 p-3 rounded\">\n      <Link to={`/product/${product._id}`}>\n        <Card.Img src={product.image} vairant=\"top\" />\n      </Link>\n\n      <Card.Body>\n        <Link to={`/product/${product._id}`}>\n          <Card.Title as=\"div\">\n            <strong>{product.name}</strong>\n          </Card.Title>\n        </Link>\n\n        <Card.Text as=\"div\">\n          <Rating value={product.rating} text={`${product.numReviews}`} />\n        </Card.Text>\n\n        <Card.Text as=\"h3\">{product.price.toFixed(0)} XAF</Card.Text>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default Product;\n","import {\n  PRODUCT_LIST_FAILURE,\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_DETAILS_FAILURE,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_DELETE_FAILURE,\n  PRODUCT_DELETE_REQUEST,\n  PRODUCT_DELETE_SUCCESS,\n  PRODUCT_CREATE_FAILURE,\n  PRODUCT_CREATE_REQUEST,\n  PRODUCT_CREATE_RESET,\n  PRODUCT_CREATE_SUCCESS,\n  PRODUCT_UPDATE_REQUEST,\n  PRODUCT_UPDATE_FAILURE,\n  PRODUCT_UPDATE_RESET,\n  PRODUCT_UPDATE_SUCCESS,\n  PRODUCT_CREATE_REVIEW_FAILURE,\n  PRODUCT_CREATE_REVIEW_REQUEST,\n  PRODUCT_CREATE_REVIEW_RESET,\n  PRODUCT_CREATE_REVIEW_SUCCESS,\n  PRODUCT_TOP_FAILURE,\n  PRODUCT_TOP_REQUEST,\n  PRODUCT_TOP_SUCCESS,\n} from '../constants/productConstants';\nimport axios from 'axios';\n\n// ?redux thunk allows us to use functions inside functions\nexport const listProducts =\n  (keyword = '', pageNumber = '') =>\n  async (dispatch) => {\n    try {\n      dispatch({ type: PRODUCT_LIST_REQUEST });\n\n      const { data } = await axios.get(\n        `/api/products?keyword=${keyword}&pageNumber=${pageNumber}`\n      );\n\n      dispatch({\n        type: PRODUCT_LIST_SUCCESS,\n        payload: data,\n      });\n    } catch (error) {\n      dispatch({\n        type: PRODUCT_LIST_FAILURE,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n    }\n  };\n\nexport const listTopProducts = () => async (dispatch) => {\n  try {\n    dispatch({ type: PRODUCT_TOP_REQUEST });\n\n    const { data } = await axios.get(`/api/products/top`);\n\n    dispatch({\n      type: PRODUCT_TOP_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_TOP_FAILURE,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const listProductDetails = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: PRODUCT_DETAILS_REQUEST });\n\n    const { data } = await axios.get(`/api/products/${id}`);\n\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAILURE,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n  //? we can get our user token, from user info which is found in the getState\n  try {\n    dispatch({\n      type: PRODUCT_DELETE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    await axios.delete(`/api/products/${id}`, config);\n\n    dispatch({\n      type: PRODUCT_DELETE_SUCCESS,\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DELETE_FAILURE,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const createProduct = () => async (dispatch, getState) => {\n  //? we can get our user token, from user info which is found in the getState\n  try {\n    dispatch({\n      type: PRODUCT_CREATE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.post(`/api/products/`, {}, config);\n\n    dispatch({\n      type: PRODUCT_CREATE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_CREATE_FAILURE,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const updateProduct = (product) => async (dispatch, getState) => {\n  //? we can get our user token, from user info which is found in the getState\n  try {\n    dispatch({\n      type: PRODUCT_UPDATE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.put(\n      `/api/products/${product._id}`,\n      product,\n      config\n    );\n\n    dispatch({\n      type: PRODUCT_UPDATE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_UPDATE_FAILURE,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const createProductReview =\n  (productId, review) => async (dispatch, getState) => {\n    //? we can get our user token, from user info which is found in the getState\n    try {\n      dispatch({\n        type: PRODUCT_CREATE_REVIEW_REQUEST,\n      });\n\n      const {\n        userLogin: { userInfo },\n      } = getState();\n\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      };\n\n      await axios.post(`/api/products/${productId}/reviews`, review, config);\n\n      dispatch({\n        type: PRODUCT_CREATE_REVIEW_SUCCESS,\n      });\n    } catch (error) {\n      dispatch({\n        type: PRODUCT_CREATE_REVIEW_FAILURE,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n    }\n  };\n","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST';\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS';\nexport const PRODUCT_LIST_FAILURE = 'PRODUCT_LIST_FAILURE';\n\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST';\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS';\nexport const PRODUCT_DETAILS_FAILURE = 'PRODUCT_DETAILS_FAILURE';\n\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST';\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS';\nexport const PRODUCT_DELETE_FAILURE = 'PRODUCT_DELETE_FAILURE';\n\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST';\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS';\nexport const PRODUCT_CREATE_FAILURE = 'PRODUCT_CREATE_FAILURE';\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET';\n\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST';\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS';\nexport const PRODUCT_UPDATE_FAILURE = 'PRODUCT_UPDATE_FAILURE';\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET';\n\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST';\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS';\nexport const PRODUCT_CREATE_REVIEW_FAILURE = 'PRODUCT_CREATE_REVIEW_FAILURE';\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET';\n\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST';\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS';\nexport const PRODUCT_TOP_FAILURE = 'PRODUCT_TOP_FAILURE';\n","import React from 'react';\nimport { Spinner } from 'react-bootstrap';\n\nconst Loader = () => {\n  return (\n    <Spinner\n      animation=\"border\"\n      role=\"status\"\n      style={{\n        width: '100px',\n        height: '100px',\n        margin: 'auto',\n        display: 'block',\n      }}\n    >\n      <span className=\"sr-only\">Loading</span>\n    </Spinner>\n  );\n};\n\nexport default Loader;\n","import React from 'react';\nimport { Alert } from 'react-bootstrap';\n\nconst Message = ({ variant, children }) => {\n  return <Alert variant={variant}>{children}</Alert>;\n};\n\nMessage.defaultProps = {\n  variant: 'info',\n};\n\nexport default Message;\n","import React from 'react';\nimport { Pagination } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\n\nconst Paginate = ({ pages, page, isAdmin = false, keyword = '' }) => {\n  return (\n    pages > 1 && (\n      <Pagination>\n        {/* take number of pages ,and map thru that as an array */}\n        {[...Array(pages).keys()].map((x) => (\n          <LinkContainer\n            key={x + 1}\n            to={\n              !isAdmin\n                ? keyword\n                  ? `/search/${keyword}/page/${x + 1}`\n                  : `/page/${x + 1}`\n                : `/admin/productlist/${x + 1}`\n            }\n          >\n            {/* the productlist screen is for admins only, thats why we do this check here */}\n            <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\n          </LinkContainer>\n        ))}\n      </Pagination>\n    )\n  );\n};\n\nexport default Paginate;\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\n\nconst Meta = ({ title, description, keywords }) => {\n  return (\n    <Helmet>\n      <title>{title}</title>\n      <meta name=\"description\" content={description} />\n      <meta name=\"keyword\" content={keywords} />\n    </Helmet>\n  );\n};\n\nMeta.defaultProps = {\n  title: 'Welcome To ProShop',\n  keyword: 'Electornics, Buy Electronic, Cheap Electronics',\n  content: 'We sell the best products for cheap',\n};\n\nexport default Meta;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Carousel, Image } from 'react-bootstrap';\nimport Loader from './Loader';\nimport Message from './Message';\nimport { listTopProducts } from '../actions/productActions';\n\nconst ProductCarousel = () => {\n  const dispatch = useDispatch();\n\n  const productTopRated = useSelector((state) => state.productTopRated);\n  const { products, loading, error } = productTopRated;\n\n  useEffect(() => {\n    dispatch(listTopProducts());\n  }, [dispatch]);\n\n  return loading ? (\n    <Loader />\n  ) : error ? (\n    <Message variant=\"danger\">{error}</Message>\n  ) : (\n    <Carousel pause=\"hover\" className=\"bg-dark\">\n      {products.map((product) => (\n        <Carousel.Item key={product._id}>\n          <Link to={`/product/${product._id}`}>\n            <Image src={product.image} alt={product.name} fluid />\n            <Carousel.Caption className=\"carousel-caption\">\n              {product.name} ${product.price}\n            </Carousel.Caption>\n          </Link>\n        </Carousel.Item>\n      ))}\n    </Carousel>\n  );\n};\n\nexport default ProductCarousel;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Product from '../components/Product';\nimport { Row, Col } from 'react-bootstrap';\nimport { listProducts } from '../actions/productActions';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport Paginate from '../components/Paginate';\nimport Meta from '../components/Meta';\nimport ProductCarousel from '../components/ProductCarousel';\n\n// ! firing off the action, then using the selector to get the state\n\nconst HomeScreen = ({ match }) => {\n  const keyword = match.params.keyword;\n  const pageNumber = match.params.pageNumber || 1;\n\n  const dispatch = useDispatch();\n  // *useSelector taks our global state, make sure u use the sm name, defined in your state\n  const productList = useSelector((state) => state.productList);\n  const { loading, error, products, page, pages } = productList;\n\n  useEffect(() => {\n    // * dispatch calls, our actions\n    dispatch(listProducts(keyword, pageNumber));\n  }, [dispatch, keyword, pageNumber]);\n\n  return (\n    <>\n      <Meta />\n      {!keyword ? (\n        <ProductCarousel />\n      ) : (\n        <Link to=\"/\" className=\"btn btn-light\">\n          Go Back\n        </Link>\n      )}\n      <h1>Latest Drugs</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <>\n          <Row>\n            {products.map((product) => (\n              <Col key={product._id} sm={12} md={6} lg={4} xl={4}>\n                <Product product={product} />\n              </Col>\n            ))}\n          </Row>\n          <Paginate\n            pages={pages}\n            page={page}\n            keyword={keyword ? keyword : ''}\n          />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default HomeScreen;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport Meta from '../components/Meta';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  Row,\n  Col,\n  Image,\n  ListGroup,\n  Card,\n  Button,\n  Form,\n} from 'react-bootstrap';\nimport Rating from '../components/Rating';\nimport {\n  listProductDetails,\n  createProductReview,\n} from '../actions/productActions';\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants';\n\nconst ProductScreen = ({ history, match }) => {\n  const [qty, setQty] = useState(1);\n  const [rating, setRating] = useState(0);\n  const [comment, setComment] = useState('');\n\n  const dispatch = useDispatch();\n  const productDetails = useSelector((state) => state.productDetails);\n  const { loading, error, product } = productDetails;\n\n  const productReviewCreate = useSelector((state) => state.productReviewCreate);\n  const { success: successReview, error: errorReview } = productReviewCreate;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  useEffect(() => {\n    if (successReview) {\n      alert('Review submitted');\n      setRating(0);\n      setComment('');\n      dispatch({ type: PRODUCT_CREATE_REVIEW_RESET });\n    }\n    console.log(match.params.id);\n    dispatch(listProductDetails(match.params.id));\n  }, [dispatch, match, successReview]);\n\n  const addToCartHandler = () => {\n    // ? history.push just redirects to the given path\n    history.push(`/cart/${match.params.id}?qty=${qty}`);\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(\n      createProductReview(match.params.id, {\n        rating,\n        comment,\n      })\n    );\n  };\n\n  return (\n    <>\n      <Link className=\"btn btn-light my-3\" to=\"/\">\n        Go Back\n      </Link>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <>\n          <Meta title={product.name} />\n          <Row>\n            <Col md={6}>\n              <Image src={product.image} alt={product.name} fluid />\n            </Col>\n            <Col md={3}>\n              <ListGroup variant=\"flush\">\n                <ListGroup.Item>\n                  <h3>{product.name}</h3>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Rating\n                    value={product.rating}\n                    text={`${product.numReviews} reviews`}\n                  />\n                </ListGroup.Item>\n                <ListGroup.Item>Price : {product.price}</ListGroup.Item>\n                <ListGroup.Item>\n                  Description : {product.description}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n            <Col md={3}>\n              <Card>\n                <ListGroup variant=\"flush\">\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Status:</Col>\n                      <Col>\n                        {product.countInStock > 0 ? 'In Stock' : 'Out of stock'}\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n                  {product.countInStock > 0 && (\n                    <ListGroup.Item>\n                      <Row>\n                        <Col>Qty</Col>\n                        <Col>\n                          <Form.Control\n                            as=\"select\"\n                            value={qty}\n                            onChange={(e) => setQty(e.target.value)}\n                          >\n                            {[...Array(product.countInStock).keys()].map(\n                              (x) => (\n                                <option value={x + 1} key={x + 1}>\n                                  {x + 1}\n                                </option>\n                              )\n                            )}\n                          </Form.Control>\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  )}\n                  <ListGroup.Item>\n                    <Button\n                      onClick={addToCartHandler}\n                      className=\"btn-block\"\n                      type=\"button\"\n                      disabled={product.countInStock === 0}\n                    >\n                      Add To Cart\n                    </Button>\n                  </ListGroup.Item>\n                </ListGroup>\n              </Card>\n            </Col>\n          </Row>\n          <Row>\n            <Col md={6}>\n              <h2>Reviews</h2>\n              {product.reviews.length === 0 && <Message>No reviews</Message>}\n              <ListGroup variant=\"flush\">\n                {product.reviews.map((review) => (\n                  <ListGroup.Item key={review._id}>\n                    <strong>{review.name}</strong>\n                    <Rating value={review.rating} />\n                    <p>{review.createdAt.substring(0, 10)}</p>\n                    <p>{review.comment}</p>\n                  </ListGroup.Item>\n                ))}\n                <ListGroup.Item>\n                  <h2>Write a Customer Review</h2>\n                  {errorReview && <Message>{errorReview}</Message>}\n                  {userInfo ? (\n                    <Form onSubmit={submitHandler}>\n                      <Form.Group controlId=\"rating\">\n                        <Form.Label>Rating</Form.Label>\n                        <Form.Control\n                          as=\"select\"\n                          value={rating}\n                          onChange={(e) => setRating(e.target.value)}\n                        >\n                          <option value=\"\">Select...</option>\n                          <option value=\"1\">1 - Poor</option>\n                          <option value=\"2\">2 - Fair</option>\n                          <option value=\"3\">3 - Good</option>\n                          <option value=\"4\">4 - Very Good</option>\n                          <option value=\"5\">5 - Excellent</option>\n                        </Form.Control>\n                      </Form.Group>\n                      <Form.Group>\n                        <Form.Label>Comment</Form.Label>\n                        <Form.Control\n                          as=\"textarea\"\n                          row=\"3\"\n                          value={comment}\n                          onChange={(e) => setComment(e.target.value)}\n                        ></Form.Control>\n                      </Form.Group>\n                      <Button type=\"submit\" variant=\"primary\">\n                        Submit\n                      </Button>\n                    </Form>\n                  ) : (\n                    <Message>\n                      Please\n                      <Link to=\"/login\"> sign in </Link>\n                      to write a review\n                    </Message>\n                  )}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n          </Row>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default ProductScreen;\n","import axios from 'axios';\nimport {\n  CART_ADD_ITEM,\n  CART_REMOVE_ITEM,\n  CART_SAVE_SHIPPING_ADDRESS,\n  CART_SAVE_PAYMENT_METHOD,\n} from '../constants/cartConstants';\n\n// getstate allows us to get evrytx found in our state, as defined in our store\n\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n  const { data } = await axios.get(`/api/products/${id}`);\n\n  dispatch({\n    type: CART_ADD_ITEM,\n    payload: {\n      product: data._id,\n      name: data.name,\n      image: data.image,\n      price: data.price,\n      countInStock: data.countInStock,\n      qty,\n    },\n  });\n\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n};\n\nexport const removeFromCart = (id) => (dispatch, getState) => {\n  dispatch({\n    type: CART_REMOVE_ITEM,\n    payload: id,\n  });\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n};\n\nexport const saveShippingAddress = (data) => (dispatch) => {\n  dispatch({\n    type: CART_SAVE_SHIPPING_ADDRESS,\n    payload: data,\n  });\n  localStorage.setItem('shippingAddress', JSON.stringify(data));\n};\n\nexport const savePaymentMethod = (data) => (dispatch) => {\n  dispatch({\n    type: CART_SAVE_PAYMENT_METHOD,\n    payload: data,\n  });\n  localStorage.setItem('paymentMethod', JSON.stringify(data));\n};\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM';\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM';\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS';\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD';\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport { Link } from 'react-router-dom';\nimport {\n  Row,\n  Col,\n  ListGroup,\n  Form,\n  Button,\n  Card,\n  Image,\n} from 'react-bootstrap';\nimport { addToCart,removeFromCart } from '../actions/cartActions';\n\n// !location is used to get query strings\nconst CartScreen = ({ match, location, history }) => {\n  const dispatch = useDispatch();\n  const productId = match.params.id;\n\n  // ? this will help us get our qty param\n  const qty = location.search ? Number(location.search.split('=')[1]) : 1;\n\n  //*  ?qty=1 , the above logic is to extract just the number\n\n  const cart = useSelector((state) => state.cart);\n  const { cartItems } = cart;\n  useEffect(() => {\n    if (productId) {\n      dispatch(addToCart(productId, qty));\n    }\n  }, [dispatch, productId, qty]);\n\n  const removeFromCartHandler = (id) => {\n    dispatch(removeFromCart(id))\n  };\n\n  const checkoutHandler = () => {\n    history.push('/login?redirect=shipping');\n  };\n  return (\n    <Row>\n      <Col md={8}>\n        <h1>Shopping Cart</h1>\n        {cartItems.length === 0 ? (\n          <Message>\n            Your cart is empty <Link to=\"/\">Go Back</Link>\n          </Message>\n        ) : (\n          <ListGroup variant=\"flush\">\n            {cartItems.map((item) => (\n              <ListGroup.Item key={item.product}>\n                <Row>\n                  <Col md={2}>\n                    <Image src={item.image} alt={item.name} fluid rounded />\n                  </Col>\n                  <Col md={3}>\n                    <Link to={`/product/${item.product}`}>{item.name}</Link>\n                  </Col>\n                  <Col md={2}>${item.price}</Col>\n                  <Col md={2}>\n                    <Form.Control\n                      as=\"select\"\n                      value={item.qty}\n                      onChange={(e) =>\n                        dispatch(\n                          addToCart(item.product, Number(e.target.value))\n                        )\n                      }\n                    >\n                      {[...Array(item.countInStock).keys()].map((x) => (\n                        <option value={x + 1} key={x + 1}>\n                          {x + 1}\n                        </option>\n                      ))}\n                    </Form.Control>\n                  </Col>\n                  <Col md={2}>\n                    <Button\n                      type=\"button\"\n                      vairant=\"light\"\n                      onClick={() => removeFromCartHandler(item.product)}\n                    >\n                      <i className=\"fas fa-trash\"></i>\n                    </Button>\n                  </Col>\n                </Row>\n              </ListGroup.Item>\n            ))}\n          </ListGroup>\n        )}\n      </Col>\n      <Col md={4}>\n        <Card>\n          <ListGroup variant=\"flush\">\n            <ListGroup.Item>\n              {/* ? reduce takes an accumulator and the current item, the second param specifies where the return starts */}\n              <h2>\n                Subtotal {cartItems.reduce((acc, item) => acc + item.qty, 0)}{' '}\n                items\n              </h2>\n              $\n              {cartItems\n                .reduce((acc, item) => acc + item.qty * item.price, 0)\n                .toFixed(2)}\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <Button\n                type=\"button\"\n                className=\"btn-block\"\n                disabled={cartItems.length === 0}\n                onClick={checkoutHandler}\n              >\n                Proceed to Checkout\n              </Button>\n            </ListGroup.Item>\n          </ListGroup>\n        </Card>\n      </Col>\n    </Row>\n  );\n};\n\nexport default CartScreen;\n","import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nconst FormContainer = ({ children }) => {\n  return (\n    <Container>\n      <Row className=\"justify-content-md-center\">\n        <Col xs={12} md={6}>\n          {children}\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default FormContainer;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Button, Row, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message.js';\nimport Loader from '../components/Loader.js';\nimport { login } from '../actions/userActions.js';\nimport FormContainer from '../components/FormContainer.js';\n\nconst LoginScreen = ({ location, history }) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch();\n  const userLogin = useSelector((state) => state.userLogin);\n\n  const { loading, error, userInfo } = userLogin;\n  // location.search contains the url query string\n  const redirect = location.search ? location.search.split('=')[1] : '/';\n\n  useEffect(() => {\n    // since we dnt want loggedin users to see the signin screen\n    if (userInfo) {\n      history.push(redirect);\n    }\n    return () => {};\n  }, [history, userInfo, redirect]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    // dispatch login\n    dispatch(login(email, password));\n  };\n  return (\n    <FormContainer>\n      <h1>Sign In</h1>\n      {error && <Message variant=\"danger\">{error}</Message>}\n      {loading && <Loader />}\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlid=\"email\">\n          <Form.Label>Email Adrress</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Enter email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group controlid=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Enter password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Button type=\"submit\" variant=\"primary\">\n          Sign In\n        </Button>\n      </Form>\n      <Row className=\"py-3\">\n        <Col>\n          New Customer?{' '}\n          <Link to={redirect ? `/register/redirect=${redirect}` : '/register'}>\n            Register\n          </Link>\n        </Col>\n      </Row>\n    </FormContainer>\n  );\n};\n\nexport default LoginScreen;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Button, Row, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message.js';\nimport Loader from '../components/Loader.js';\nimport { register } from '../actions/userActions.js';\nimport FormContainer from '../components/FormContainer.js';\n\nconst RegisterScreen = ({ location, history }) => {\n  const [email, setEmail] = useState('');\n  const [name, setName] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState(null);\n  const dispatch = useDispatch();\n\n  const userRegister = useSelector((state) => state.userRegister);\n\n  const { loading, error, userInfo } = userRegister;\n  // location.search contains the url query string\n  const redirect = location.search ? location.search.split('=')[1] : '/';\n\n  useEffect(() => {\n    // since we dnt want loggedin users to see the signin screen\n    if (userInfo) {\n      history.push(redirect);\n    }\n    return () => {};\n  }, [history, userInfo, redirect]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    // dispatch register\n    if (password !== confirmPassword) {\n      setMessage('Passwords do not match');\n    } else {\n      dispatch(register(name, email, password));\n    }\n  };\n  return (\n    <FormContainer>\n      <h1>Sign Up!</h1>\n      {message && <Message variant=\"danger\">{message}</Message>}\n      {loading && <Loader />}\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlid=\"name\">\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter name\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group controlid=\"email\">\n          <Form.Label>Email Adrress</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Enter email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group controlid=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Enter password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group controlid=\"confirmPassword\">\n          <Form.Label>Confirm Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Confirm password\"\n            value={confirmPassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Button type=\"submit\" variant=\"primary\">\n          Register\n        </Button>\n      </Form>\n      <Row className=\"py-3\">\n        <Col>\n          Have an Account?{' '}\n          <Link to={redirect ? `/login/redirect=${redirect}` : '/login'}>\n            Login\n          </Link>\n        </Col>\n      </Row>\n    </FormContainer>\n  );\n};\n\nexport default RegisterScreen;\n","import React, { useEffect } from 'react';\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport Message from '../components/Message.js';\nimport { getUserDetails, updateUserProfile } from '../actions/userActions.js';\nimport { listMyOrders } from '../actions/orderActions';\nimport Loader from '../components/Loader';\n\nconst ProfileScreen = ({ history }) => {\n  const [name, setName] = React.useState('');\n  const [email, setEmail] = React.useState('');\n  const [password, setPassword] = React.useState('');\n  const [message, setMessage] = React.useState('');\n  const [confirmPassword, setConfirmPassword] = React.useState('');\n\n  const dispatch = useDispatch();\n\n  const userDetails = useSelector((state) => state.userDetails);\n  const { loading: loadingDetails, error: errorDetails, user } = userDetails;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\n  const { success } = userUpdateProfile;\n\n  const orderListMy = useSelector((state) => state.orderListMy);\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy;\n\n  console.table(orders, 'These are my orders');\n\n  useEffect(() => {\n    // since we dnt want loggedin users to see the signin screen\n    if (!userInfo) {\n      // redirect to sigin page\n      history.push('/login');\n    } else {\n      if (!userInfo.name) {\n        dispatch(getUserDetails('profile'));\n        dispatch(listMyOrders());\n      } else {\n        setName(userInfo.name);\n        setEmail(userInfo.email);\n      }\n    }\n    return () => {};\n  }, [dispatch, history, userInfo, user]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      setMessage('Passwords do not match');\n    } else {\n      dispatch(updateUserProfile({ id: userInfo._id, name, email, password }));\n    }\n  };\n  return (\n    <Row>\n      <Col md={3}>\n        <h2>User Profile</h2>\n        {errorDetails && <Message variant=\"danger\">{errorDetails}</Message>}\n        {message && <Message variant=\"danger\">{message}</Message>}\n        {success && <Message variant=\"success\">Profile Updated</Message>}\n        {/* {loading && <Loader />} */}\n        <Form onSubmit={submitHandler}>\n          <Form.Group controlid=\"email\">\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter name\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group controlid=\"email\">\n            <Form.Label>Email Adrress</Form.Label>\n            <Form.Control\n              type=\"email\"\n              placeholder=\"Enter email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group controlid=\"password\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Enter password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group controlid=\"confirmpassword\">\n            <Form.Label>Confirm Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Confirm password\"\n              value={confirmPassword}\n              onChange={(e) => setConfirmPassword(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n          <Button type=\"submit\" variant=\"primary\">\n            Update\n          </Button>\n        </Form>\n      </Col>\n      <Col md={9}>\n        <h2>My Orders</h2>\n        {loadingOrders ? (\n          <Loader />\n        ) : errorOrders ? (\n          <Message variant=\"danger\">{errorOrders}</Message>\n        ) : (\n          <Table striped bordered hover responsive className=\"table-sm\">\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>DATE</th>\n                <th>TOTAL</th>\n                <th>PAID ON</th>\n                <th>DELIVERED</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {orders.map((order) => (\n                <tr key={order._id}>\n                  <td>{order._id}</td>\n                  <td>{order.createdAt.substring(0, 10)}</td>\n                  <td>${order.totalPrice}</td>\n                  <td>\n                    {order.isPaid ? (\n                      order.paidAt.substring(0, 10)\n                    ) : (\n                      <i className=\"fas fa-times\" style={{ color: 'red' }}></i>\n                    )}\n                    )\n                  </td>\n                  <td>\n                    {order.Delivered ? (\n                      order.deliveredAt.substring(0, 10)\n                    ) : (\n                      <i className=\"fas fa-times\" style={{ color: 'red' }}></i>\n                    )}\n                  </td>\n                  <td>\n                    <LinkContainer to={`/order/${order._id}`}>\n                      <Button className=\"btn-sm\" variant=\"light\">\n                        Details\n                      </Button>\n                    </LinkContainer>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        )}\n      </Col>\n    </Row>\n  );\n};\n\nexport default ProfileScreen;\n","import {\n  ORDER_CREATE_FAILURE,\n  ORDER_CREATE_SUCCESS,\n  ORDER_CREATE_REQUEST,\n  ORDER_DETAILS_FAILURE,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_DETAILS_REQUEST,\n  ORDER_PAY_REQUEST,\n  ORDER_PAY_FAILURE,\n  ORDER_PAY_SUCCESS,\n  ORDER_LIST_MY_REQUEST,\n  ORDER_LIST_MY_SUCCESS,\n  ORDER_LIST_MY_FAILURE,\n  ORDER_ALL_FAILURE,\n  ORDER_ALL_REQUEST,\n  ORDER_ALL_SUCCESS,\n  ORDER_DELIVER_FAILURE,\n  ORDER_DELIVER_REQUEST,\n  ORDER_DELIVER_RESET,\n  ORDER_DELIVER_SUCCESS,\n} from '../constants/orderConstants';\nimport axios from 'axios';\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n  //? we can get our user token, from user info which is found in the getState\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.post(`/api/orders`, order, config);\n\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAILURE,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n  //? we can get our user token, from user info which is found in the getState\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/orders/${id}`, config);\n\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAILURE,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const payOrder =\n  (orderId, paymentResult) => async (dispatch, getState) => {\n    //? we can get our user token, from user info which is found in the getState\n    try {\n      dispatch({\n        type: ORDER_PAY_REQUEST,\n      });\n\n      const {\n        userLogin: { userInfo },\n      } = getState();\n\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      };\n\n      const { data } = await axios.put(\n        `/api/orders/${orderId}/pay`,\n        paymentResult,\n        config\n      );\n\n      dispatch({\n        type: ORDER_PAY_SUCCESS,\n        payload: data,\n      });\n    } catch (error) {\n      dispatch({\n        type: ORDER_PAY_FAILURE,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n    }\n  };\n\nexport const deliverOrder = (order) => async (dispatch, getState) => {\n  //? we can get our user token, from user info which is found in the getState\n  try {\n    dispatch({\n      type: ORDER_DELIVER_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.put(\n      `/api/orders/${order._id}/deliver`,\n      {},\n      config\n    );\n\n    dispatch({\n      type: ORDER_DELIVER_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DELIVER_FAILURE,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n  //? we can get our user token, from user info which is found in the getState\n  try {\n    dispatch({\n      type: ORDER_LIST_MY_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/orders/myorders`, config);\n\n    dispatch({\n      type: ORDER_LIST_MY_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_MY_FAILURE,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const listAllOrders = () => async (dispatch, getState) => {\n  //? we can get our user token, from user info which is found in the getState\n  try {\n    dispatch({\n      type: ORDER_ALL_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/orders/`, config);\n\n    dispatch({\n      type: ORDER_ALL_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_ALL_FAILURE,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n","import React from 'react';\nimport { Nav } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\n\nconst CheckOutSteps = ({ step1, step2, step3, step4 }) => {\n  return (\n    <Nav className=\"justify-content-center mb-4\">\n      <Nav.Item>\n        {step1 ? (\n          <LinkContainer to=\"/login\">\n            <Nav.Link>Sign In</Nav.Link>\n          </LinkContainer>\n        ) : (\n          // step1 not found, display navlink as disabled\n          <Nav.Link disabled>Sign In</Nav.Link>\n        )}\n      </Nav.Item>\n      <Nav.Item>\n        {step2 ? (\n          <LinkContainer to=\"/shipping\">\n            <Nav.Link>Shipping</Nav.Link>\n          </LinkContainer>\n        ) : (\n          // step1 not found, display navlink as disabled\n          <Nav.Link disabled>Shipping</Nav.Link>\n        )}\n      </Nav.Item>\n      <Nav.Item>\n        {step3 ? (\n          <LinkContainer to=\"/payments\">\n            <Nav.Link>Payment</Nav.Link>\n          </LinkContainer>\n        ) : (\n          // step1 not found, display navlink as disabled\n          <Nav.Link disabled>Payment</Nav.Link>\n        )}\n      </Nav.Item>\n      <Nav.Item>\n        {step4 ? (\n          <LinkContainer to=\"/placeorder\">\n            <Nav.Link>Place Order</Nav.Link>\n          </LinkContainer>\n        ) : (\n          // step1 not found, display navlink as disabled\n          <Nav.Link disabled>Place Order</Nav.Link>\n        )}\n      </Nav.Item>\n    </Nav>\n  );\n};\n\nexport default CheckOutSteps;\n","import React, { useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FormContainer from '../components/FormContainer.js';\nimport CheckOutSteps from '../components/CheckOutSteps';\nimport { saveShippingAddress } from '../actions/cartActions';\n\nconst ShippingScreen = ({ history }) => {\n  const dispatch = useDispatch();\n  const cart = useSelector((state) => state.cart);\n  const { shippingAddress } = cart;\n\n  const [address, setAddress] = useState(shippingAddress.address);\n  const [city, setCity] = useState(shippingAddress.city);\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\n  const [country, setCountry] = useState(shippingAddress.country);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(\n      saveShippingAddress({\n        address,\n        city,\n        postalCode,\n        country,\n      })\n    );\n    history.push('/payments');\n  };\n\n  return (\n    <FormContainer>\n      {/* shipping screen is 2nd step,\n      so we pass whatever step we r on, and those before\n      */}\n      <CheckOutSteps step1 step2 />\n      <h1>Shipping</h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlid=\"address\">\n          <Form.Label>Address</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter address\"\n            value={address}\n            required\n            onChange={(e) => setAddress(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group controlid=\"city\">\n          <Form.Label>City</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter city\"\n            value={city}\n            required\n            onChange={(e) => setCity(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group controlid=\"postalCode\">\n          <Form.Label>Postal Code</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter postal code\"\n            value={postalCode}\n            required\n            onChange={(e) => setPostalCode(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group controlid=\"country\">\n          <Form.Label>Country</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter country\"\n            value={country}\n            required\n            onChange={(e) => setCountry(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Button type=\"submit\" variant=\"primary\">\n          Continue\n        </Button>\n      </Form>\n    </FormContainer>\n  );\n};\n\nexport default ShippingScreen;\n","import React, { useState } from 'react';\nimport { Form, Button, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FormContainer from '../components/FormContainer.js';\nimport CheckOutSteps from '../components/CheckOutSteps';\nimport { savePaymentMethod } from '../actions/cartActions';\n\nconst PaymentsScreen = ({ history }) => {\n  const dispatch = useDispatch();\n  const cart = useSelector((state) => state.cart);\n  const { shippingAddress } = cart;\n\n  if (!shippingAddress) {\n    history.push('/shipping');\n  }\n\n  const [paymentMethod, setPaymentMethod] = useState('Paypal');\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(savePaymentMethod(paymentMethod));\n    history.push('/placeorder');\n  };\n\n  return (\n    <FormContainer>\n      {/* shipping screen is 2nd step,\n      so we pass whatever step we r on, and those before\n      */}\n      <CheckOutSteps step1 step2 step3 />\n      <h1>Payment Method</h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group>\n          <Form.Label as=\"legend\">Select Method</Form.Label>\n          <Col>\n            <Form.Check\n              type=\"radio\"\n              label=\"Paypal or Credit card\"\n              id=\"PayPal\"\n              name=\"paymentMethod\"\n              value=\"PayPal\"\n              checked\n              onChange={(e) => setPaymentMethod(e.target.value)}\n            ></Form.Check>\n          </Col>\n        </Form.Group>\n        <Button type=\"submit\" variant=\"primary\">\n          Continue\n        </Button>\n      </Form>\n    </FormContainer>\n  );\n};\n\nexport default PaymentsScreen;\n","import React, { useEffect } from 'react';\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport CheckOutSteps from '../components/CheckOutSteps';\nimport { Link } from 'react-router-dom';\nimport { createOrder } from '../actions/orderActions';\n\nconst PlaceOrderScreen = ({ history }) => {\n  const dispatch = useDispatch();\n\n  const addDecimals = (num) => {\n    return (Math.round(num * 100) / 100).toFixed(2);\n  };\n\n  const cart = useSelector((state) => state.cart);\n  // calculate prices\n  cart.itemsPrice = addDecimals(\n    cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n  );\n\n  cart.shippingPrice = addDecimals(cart.ItemsPrice > 100 ? 0 : 100);\n  cart.taxPrice = addDecimals(Number(0.15 * cart.itemsPrice).toFixed(2));\n  cart.totalPrice =\n    Number(cart.itemsPrice) +\n    Number(cart.shippingPrice) +\n    Number(cart.taxPrice);\n\n  const orderCreate = useSelector((state) => state.orderCreate);\n  const { order, success, error } = orderCreate;\n\n  useEffect(() => {\n    if (success) {\n      history.push(`/order/${order._id}`);\n    }\n    // eslint-disable-next-line\n  }, [history, success]);\n\n  const placeOrderHandler = () => {\n    dispatch(\n      createOrder({\n        orderItems: cart.cartItems,\n        shippingAddress: cart.shippingAddress,\n        paymentMethod: cart.paymentMethod,\n        itemsPrice: cart.itemsPrice,\n        shippingPrice: cart.shippingPrice,\n        taxPrice: cart.taxPrice,\n        totalPrice: cart.totalPrice,\n      })\n    );\n  };\n\n  return (\n    <>\n      <CheckOutSteps step1 step2 step3 step4 />\n      <Row>\n        <Col md={8}>\n          <ListGroup variant=\"flush\">\n            <ListGroup.Item>\n              <h2>Shipping</h2>\n              <p>\n                <strong>\n                  {cart.shippingAddress.address},{cart.shippingAddress.city},\n                  {cart.shippingAddress.postalCode},\n                  {cart.shippingAddress.country}\n                </strong>\n              </p>\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <h2>Payment Method</h2>\n              <strong>\n                Method:\n                {cart.paymentMethod}\n              </strong>\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <h2>Order Items</h2>\n              {cart.cartItems.length === 0 ? (\n                <Message>Your cart is empty</Message>\n              ) : (\n                <ListGroup variant=\"flush\">\n                  {cart.cartItems.map((item, index) => (\n                    <ListGroup.Item key={index}>\n                      <Row>\n                        <Col md={1}>\n                          <Image\n                            src={item.image}\n                            alt={item.name}\n                            fluid\n                            rounded\n                          />\n                        </Col>\n                        <Col>\n                          <Link to={`/product/${item.product}`}>\n                            {item.name}\n                          </Link>\n                        </Col>\n                        <Col md={4}>\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n        <Col md={4}>\n          <Card>\n            <ListGroup variant=\"flush\">\n              <ListGroup.Item>\n                <h2>Order Summary</h2>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Item Price</Col>\n                  <Col>${cart.itemsPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Shipping Price</Col>\n                  <Col>${cart.shippingPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Tax Price</Col>\n                  <Col>${cart.taxPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total</Col>\n                  <Col>${cart.totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                {error && <Message variant=\"danger\">{error}</Message>}\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Button\n                  type=\"button\"\n                  className=\"btn-block\"\n                  disabled={cart.cartItems === 0}\n                  onClick={placeOrderHandler}\n                >\n                  Place Order\n                </Button>\n              </ListGroup.Item>\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default PlaceOrderScreen;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { PayPalButton } from 'react-paypal-button-v2';\nimport { Link } from 'react-router-dom';\nimport {\n  getOrderDetails,\n  payOrder,\n  deliverOrder,\n} from '../actions/orderActions';\nimport {\n  ORDER_PAY_RESET,\n  ORDER_DELIVER_RESET,\n} from '../constants/orderConstants';\n\nconst OrderScreen = ({ match, history }) => {\n  const orderId = match.params.id;\n  const dispatch = useDispatch();\n  const [sdkReady, setSdkReady] = useState(false);\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const orderDetails = useSelector((state) => state.orderDetails);\n  const { order, loading, error } = orderDetails;\n\n  const orderPay = useSelector((state) => state.orderPay);\n  const { loading: loadingPay, success: successPay } = orderPay;\n\n  const orderDeliver = useSelector((state) => state.orderDeliver);\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver;\n\n  if (!loading) {\n    const addDecimals = (num) => {\n      return (Math.round(num * 100) / 100).toFixed(2);\n    };\n\n    // calculate prices\n    order.itemsPrice = addDecimals(\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n    );\n  }\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.pushState('/login');\n    }\n\n    const addPayPalScript = async () => {\n      // ! the :clientId means we r renaming our data vraible to clientId\n      const { data: clientId } = await axios.get('/api/config/paypal');\n      const script = document.createElement('script');\n      script.type = 'text/javascript';\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\n      script.async = true;\n      script.onload = () => {\n        setSdkReady(true);\n      };\n      document.body.appendChild(script);\n    };\n\n    if (!order || successPay || successDeliver) {\n      // load the order again if it gets paid\n      // we should also see the order, even if its nt there\n      dispatch({ type: ORDER_PAY_RESET }); // To avoid infite refreshing after payments\n      dispatch({ type: ORDER_DELIVER_RESET });\n      dispatch(getOrderDetails(orderId));\n    } else if (!order.isPaid) {\n      // if order isnt payd\n      if (!window.paypal) {\n        // if paypal isnt loaded or if order inst yet paid\n        addPayPalScript();\n      } else {\n        setSdkReady(true);\n      }\n    }\n  }, [dispatch, orderId, successPay, order, successDeliver, history, userInfo]);\n\n  const successPaymentHandler = (paymentResult) => {\n    dispatch(payOrder(orderId, paymentResult));\n  };\n\n  const deliverHanlder = () => {\n    dispatch(deliverOrder(order));\n  };\n\n  return loading ? (\n    <Loader />\n  ) : error ? (\n    <Message variant=\"danger\">{error}</Message>\n  ) : (\n    <>\n      <h1>Order {order._id}</h1>\n      <Row>\n        <Col md={8}>\n          <ListGroup variant=\"flush\">\n            <ListGroup.Item>\n              <h2>Shipping</h2>\n              <p>\n                <strong>Name:</strong>\n                {order.user.name}\n              </p>\n              <p>\n                <strong>Email:</strong>\n                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\n              </p>\n              <p>\n                <strong>\n                  {order.shippingAddress.address},{order.shippingAddress.city},\n                  {order.shippingAddress.postalCode},\n                  {order.shippingAddress.country}\n                </strong>\n              </p>\n              {order.isDelivered ? (\n                <Message variant=\"success\">\n                  Delivered on {order.deliveredAt}\n                </Message>\n              ) : (\n                <Message variant=\"danger\">Not Delivered</Message>\n              )}\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <h2>Payment Method</h2>\n              <p>\n                <strong>\n                  Method:\n                  {order.paymentMethod}\n                </strong>\n              </p>\n              {order.isPaid ? (\n                <Message variant=\"success\">Paid on {order.paidAt}</Message>\n              ) : (\n                <Message variant=\"danger\">Not Paid</Message>\n              )}\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <h2>Order Items</h2>\n              {order.orderItems.length === 0 ? (\n                <Message>Order is empty</Message>\n              ) : (\n                <ListGroup variant=\"flush\">\n                  {order.orderItems.map((item, index) => (\n                    <ListGroup.Item key={index}>\n                      <Row>\n                        <Col md={1}>\n                          <Image\n                            src={item.image}\n                            alt={item.name}\n                            fluid\n                            rounded\n                          />\n                        </Col>\n                        <Col>\n                          <Link to={`/product/${item.product}`}>\n                            {item.name}\n                          </Link>\n                        </Col>\n                        <Col md={4}>\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n        <Col md={4}>\n          <Card>\n            <ListGroup variant=\"flush\">\n              <ListGroup.Item>\n                <h2>Order Summary</h2>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Item Price</Col>\n                  <Col>${order.itemsPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Shipping Price</Col>\n                  <Col>${order.shippingPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Tax Price</Col>\n                  <Col>${order.taxPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total</Col>\n                  <Col>${order.totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              {!order.isPaid && (\n                <ListGroup.Item>\n                  {loadingPay && <Loader />}\n                  {!sdkReady ? (\n                    <Loader />\n                  ) : (\n                    <PayPalButton\n                      amount={order.totalPrice}\n                      onSuccess={successPaymentHandler}\n                    />\n                  )}\n                </ListGroup.Item>\n              )}\n              {loadingDeliver && <Loader />}\n              {userInfo &&\n                userInfo.isAdmin &&\n                order.isPaid &&\n                !order.isDelivered && (\n                  <ListGroup.Item>\n                    <Button\n                      type=\"button\"\n                      className=\"btn btn-block\"\n                      onClick={deliverHanlder}\n                    >\n                      Mark As Delivered\n                    </Button>\n                  </ListGroup.Item>\n                )}\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default OrderScreen;\n","import React, { useEffect } from 'react';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { Button, Table } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message.js';\nimport Loader from '../components/Loader.js';\nimport { listUsers, deleteUser } from '../actions/userActions';\n\nconst UserListScreen = ({ history }) => {\n  const dispatch = useDispatch();\n\n  const userList = useSelector((state) => state.userList);\n\n  const { loading, error, users } = userList;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const userDelete = useSelector((state) => state.userDelete);\n  const { success: successDelete } = userDelete;\n\n  const deleteHandler = (id) => {\n    if (window.confirm('sure about this ?')) {\n      dispatch(deleteUser(id));\n    }\n  };\n\n  useEffect(() => {\n    // dispatch list all users, only if user is loggedin and is admin\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listUsers());\n    } else {\n      history.push('/login');\n    }\n  }, [dispatch, history, successDelete, userInfo]);\n\n  return (\n    <>\n      <h1>Suppliers</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <Table striped bordered hover responsive>\n          <thead>\n            <tr>\n              <th>NAME</th>\n              <th>EMAIL</th>\n              <th>ADMIN</th>\n              <th>TEL</th>\n              <th>LOCATION</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {users.map((user) => (\n              <tr key={user._id}>\n                <td>{user.name}</td>\n                <td>\n                  <a href={`mailto:${user.email}`}>{user.email}</a>{' '}\n                </td>\n\n                <td>\n                  {user.isAdmin ? (\n                    <i className=\"fas fa-check\" style={{ color: 'green' }}></i>\n                  ) : (\n                    <i className=\"fas fa-times\" style={{ color: 'red' }}></i>\n                  )}\n                </td>\n                <td>673-15-96-85</td>\n                <td>Douala</td>\n                <td>\n                  <LinkContainer to={`/admin/users/${user._id}/edit`}>\n                    <Button variant=\"light\" className=\"btn-sm\">\n                      <i className=\"fas fa-edit\"></i>\n                    </Button>\n                  </LinkContainer>\n                  <Button\n                    variant=\"danger\"\n                    className=\"btn-sm\"\n                    onClick={() => deleteHandler(user._id)}\n                  >\n                    <i className=\"fas fa-trash\"></i>\n                  </Button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </>\n  );\n};\n\nexport default UserListScreen;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message.js';\nimport Loader from '../components/Loader.js';\nimport FormContainer from '../components/FormContainer.js';\nimport { getUserDetails, updateUser } from '../actions/userActions';\nimport { USER_UPDATE_RESET } from '../constants/userConstants';\n\nconst UserEditScreen = ({ match, history }) => {\n  const userId = match.params.id;\n  const [email, setEmail] = useState('');\n  const [name, setName] = useState('');\n  const [isAdmin, setIsAdmin] = useState(false);\n  const dispatch = useDispatch();\n\n  const userDetails = useSelector((state) => state.userDetails);\n  const { loading, error, user } = userDetails;\n  // location.search contains the url query string\n\n  const userUpdate = useSelector((state) => state.userUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = userUpdate;\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: USER_UPDATE_RESET });\n      history.push('/admin/userlist');\n    } else {\n      if (!user.name || user._id !== userId) {\n        dispatch(getUserDetails(userId));\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n        setIsAdmin(user.isAdmin);\n      }\n    }\n\n    return () => {};\n  }, [user, dispatch, userId, successUpdate, history]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(\n      updateUser({\n        _id: userId,\n        name,\n        email,\n        isAdmin,\n      })\n    );\n  };\n  return (\n    <>\n      <Link to=\"/admin/userlist\" className=\"btn btn-light my-3\">\n        Go Back\n      </Link>\n      <FormContainer>\n        <h1>Edit User</h1>\n        {loadingUpdate && <Loader />}\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant=\"danger\">{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlid=\"name\">\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter name\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n            <Form.Group controlid=\"email\">\n              <Form.Label>Email Adrress</Form.Label>\n              <Form.Control\n                type=\"email\"\n                placeholder=\"Enter email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n            <Form.Group controlid=\"isAdmin\">\n              <Form.Check\n                type=\"checkbox\"\n                label=\"Is Admin\"\n                checked={isAdmin}\n                onChange={(e) => setIsAdmin(e.target.checked)}\n              ></Form.Check>\n            </Form.Group>\n            <Button type=\"submit\" variant=\"primary\">\n              Update\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </>\n  );\n};\n\nexport default UserEditScreen;\n","import React, { useEffect } from 'react';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { Button, Table, Row, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message.js';\nimport Paginate from '../components/Paginate.js';\nimport Loader from '../components/Loader.js';\nimport {\n  listProducts,\n  deleteProduct,\n  createProduct,\n} from '../actions/productActions';\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants';\n\nconst ProductListScreen = ({ match, history }) => {\n  const pageNumber = match.params.pageNumber || 1;\n\n  const dispatch = useDispatch();\n\n  const productList = useSelector((state) => state.productList);\n\n  const { loading, error, products, page, pages } = productList;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const productDelete = useSelector((state) => state.productDelete);\n  const {\n    loading: loadingDelete,\n    error: errorDelete,\n    success: successDelete,\n  } = productDelete;\n\n  const productCreate = useSelector((state) => state.productCreate);\n  const {\n    loading: loadingCreate,\n    error: errorCreate,\n    success: successCreate,\n    product: createdProduct,\n  } = productCreate;\n\n  const deleteHandler = (id) => {\n    if (window.confirm('Sure About this ?')) {\n      dispatch(deleteProduct(id));\n    }\n  };\n\n  const createProductHandler = () => {\n    dispatch(createProduct());\n  };\n\n  useEffect(() => {\n    dispatch({ type: PRODUCT_CREATE_RESET });\n    if (!userInfo.isAdmin) {\n      history.push('/login');\n    }\n    if (successCreate) {\n      history.push(`/admin/products/${createdProduct._id}/edit`);\n    } else {\n      dispatch(listProducts('', pageNumber));\n    }\n  }, [\n    dispatch,\n    userInfo,\n    successDelete,\n    successCreate,\n    createdProduct,\n    history,\n    pageNumber,\n  ]);\n\n  return (\n    <>\n      <Row className=\"align-items-center\">\n        <Col>\n          <h1>Drugs</h1>\n        </Col>\n        <Col className=\"text-right\">\n          <Button className=\"my-3\" onClick={() => createProductHandler()}>\n            <i className=\"fas fa-plus mr-3\"></i>Create Drug\n          </Button>\n        </Col>\n      </Row>\n      {loadingDelete && <Loader />}\n      {errorDelete && <Message variant=\"danger\">{errorDelete}</Message>}\n      {loadingCreate && <Loader />}\n      {errorCreate && <Message variant=\"danger\">{errorCreate}</Message>}\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <>\n          <Table striped bordered hover responsive>\n            <thead>\n              <tr>\n                {/* <th>ID</th> */}\n                <th>NAME</th>\n                <th>PRICE (XAF)</th>\n                <th>CATEGORY</th>\n                <th>BRAND</th>\n              </tr>\n            </thead>\n            <tbody>\n              {products.map((product) => (\n                <tr key={product._id}>\n                  {/* <td>{product._id.substr(1, 4)}</td> */}\n                  <td>{product.name}</td>\n                  <td>{product.price.toFixed(0)}</td>\n                  <td>{product.category}</td>\n                  <td>{product.brand}</td>\n                  <td>\n                    <LinkContainer to={`/admin/products/${product._id}/edit`}>\n                      <Button variant=\"light\" className=\"btn-sm\">\n                        <i className=\"fas fa-edit\"></i>\n                      </Button>\n                    </LinkContainer>\n                    <Button\n                      variant=\"danger\"\n                      className=\"btn-sm\"\n                      onClick={() => deleteHandler(product._id)}\n                    >\n                      <i className=\"fas fa-trash\"></i>\n                    </Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n          <Paginate page={page} pages={pages} isAdmin={true} />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default ProductListScreen;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { Form, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message.js';\nimport Loader from '../components/Loader.js';\nimport FormContainer from '../components/FormContainer.js';\nimport { listProductDetails, updateProduct } from '../actions/productActions';\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants.js';\n\nconst ProductEditScreen = ({ match, history }) => {\n  const productId = match.params.id;\n  const [name, setName] = useState('');\n  const [price, setPrice] = useState(0);\n  const [image, setImage] = useState('');\n  const [brand, setBrand] = useState('');\n  const [category, setCategory] = useState('');\n  const [countInStock, setCountInStock] = useState(0);\n  const [description, setDescription] = useState('');\n  const [uploading, setUploading] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const productDetails = useSelector((state) => state.productDetails);\n  const { loading, error, product } = productDetails;\n  // location.search contains the url query string\n\n  const productUpdate = useSelector((state) => state.productUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = productUpdate;\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: PRODUCT_UPDATE_RESET });\n      history.push('/admin/productlist');\n    } else {\n      if (!product.name || product._id !== productId) {\n        dispatch(listProductDetails(productId));\n      } else {\n        setName(product.name);\n        setPrice(product.price);\n        setImage(product.image);\n        setBrand(product.brand);\n        setCategory(product.category);\n        setCountInStock(product.countInStock);\n        setDescription(product.description);\n      }\n    }\n\n    return () => {};\n  }, [product, dispatch, productId, successUpdate, history]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(\n      updateProduct({\n        _id: productId,\n        name,\n        price,\n        image,\n        brand,\n        category,\n        description,\n        countInStock,\n      })\n    );\n  };\n\n  const uploadFileHandler = async (e) => {\n    const file = e.target.files[0];\n    const formData = new FormData();\n    formData.append('image', file);\n    setUploading(true);\n\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      };\n\n      const { data } = await axios.post('/api/upload', formData, config);\n      console.log(data, 'this is the path of the file');\n\n      setImage(data);\n      setUploading(false);\n    } catch (error) {\n      console.error(error);\n      setUploading(false);\n    }\n  };\n  return (\n    <>\n      <Link to=\"/admin/productlist\" className=\"btn btn-light my-3\">\n        Go Back\n      </Link>\n      <FormContainer>\n        <h1>Add Drug</h1>\n        {loadingUpdate && <Loader />}\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant=\"danger\">{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlid=\"name\">\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter name\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n            <Form.Group controlid=\"description\">\n              <Form.Label>Description</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter product description \"\n                value={description}\n                onChange={(e) => setDescription(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n            <Form.Group controlid=\"price\">\n              <Form.Label>Price</Form.Label>\n              <Form.Control\n                type=\"number\"\n                placeholder=\"Enter price\"\n                value={price}\n                onChange={(e) => setPrice(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n            <Form.Group controlid=\"image\">\n              <Form.Label>Image</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter image URL\"\n                value={image}\n                onChange={(e) => setImage(e.target.value)}\n              ></Form.Control>\n              <Form.File\n                id=\"image-file\"\n                label=\"choose-file\"\n                custom\n                onChange={uploadFileHandler}\n              ></Form.File>\n              {uploading && <Loader />}\n            </Form.Group>\n            <Form.Group controlid=\"brand\">\n              <Form.Label>Brand</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter brand name\"\n                value={brand}\n                onChange={(e) => setBrand(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n            <Form.Group controlid=\"countInStock\">\n              <Form.Label>Count In Stock</Form.Label>\n              <Form.Control\n                type=\"number\"\n                placeholder=\"Enter counter in stock\"\n                value={countInStock}\n                onChange={(e) => setCountInStock(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n            <Form.Group controlid=\"category\">\n              <Form.Label>Category</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter Category\"\n                value={category}\n                onChange={(e) => setCategory(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Button type=\"submit\" variant=\"primary\">\n              Update\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </>\n  );\n};\n\nexport default ProductEditScreen;\n","import React, { useEffect } from 'react';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { Button, Table, Row, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message.js';\nimport Loader from '../components/Loader.js';\nimport { listAllOrders } from '../actions/orderActions';\n\nconst OrderListScreen = ({ match, history }) => {\n  const dispatch = useDispatch();\n\n  const orderList = useSelector((state) => state.orderListAll);\n\n  const { loading, error, orders } = orderList;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  useEffect(() => {\n    //     dispatch({ type: PRODUCT_CREATE_RESET });\n    if (!userInfo.isAdmin) {\n      history.push('/login');\n    } else {\n      dispatch(listAllOrders());\n    }\n  }, [dispatch, userInfo, history]);\n\n  return (\n    <>\n      <Row className=\"align-items-center\">\n        <Col>\n          <h1>Orders</h1>\n        </Col>\n      </Row>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <Table striped bordered hover responsive className=\"table-sm\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>USER</th>\n              <th>DATE</th>\n              <th>TOTAL</th>\n              <th>PAID ON</th>\n              <th>DELIVERED</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {orders.map((order) => (\n              <tr key={order._id}>\n                <td>{order._id}</td>\n                <td>{order.user && order.user.name}</td>\n                <td>{order.createdAt.substring(0, 10)}</td>\n                <td>${order.totalPrice}</td>\n                <td>\n                  {order.isPaid ? (\n                    order.paidAt.substring(0, 10)\n                  ) : (\n                    <i className=\"fas fa-times\" style={{ color: 'red' }}></i>\n                  )}\n                  )\n                </td>\n                <td>\n                  {order.Delivered ? (\n                    order.deliveredAt.substring(0, 10)\n                  ) : (\n                    <i className=\"fas fa-times\" style={{ color: 'red' }}></i>\n                  )}\n                </td>\n                <td>\n                  <LinkContainer to={`/order/${order._id}`}>\n                    <Button className=\"btn-sm\" variant=\"light\">\n                      Details\n                    </Button>\n                  </LinkContainer>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </>\n  );\n};\n\nexport default OrderListScreen;\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Container } from 'react-bootstrap';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport HomeScreen from './screens/HomeScreen';\nimport ProductScreen from './screens/ProductScreen';\nimport CartScreen from './screens/CartScreen';\nimport LoginScreen from './screens/LoginScreen';\nimport RegisterScreen from './screens/RegistrationScreen';\nimport ProfileScreen from './screens/ProfileScreen';\nimport ShippingScreen from './screens/ShippingScreen';\nimport PaymentsScreen from './screens/PaymentsScreen';\nimport PlaceOrderScreen from './screens/PlaceOrderScreen';\nimport OrderScreen from './screens/OrderScreen';\nimport UserListScreen from './screens/UserListScreen';\nimport UserEditScreen from './screens/UserEditScreen';\nimport ProductListScreen from './screens/ProductListScreen';\nimport ProductEditScreen from './screens/ProductEditScreen';\nimport OrderListScreen from './screens/orderListScreen';\n\nconst App = () => {\n  return (\n    <Router>\n      <Header />\n\n      <main className=\"py-3\">\n        <Container>\n          {/* <HomeScreen /> */}\n          <Route path=\"/shipping\" component={ShippingScreen} />\n          <Route path=\"/payments\" component={PaymentsScreen} />\n          <Route path=\"/placeorder\" component={PlaceOrderScreen} />\n          <Route path=\"/login\" component={LoginScreen} />\n          <Route path=\"/profile\" component={ProfileScreen} />\n          <Route path=\"/register\" component={RegisterScreen} />\n          <Route path=\"/register\" component={RegisterScreen} />\n          <Route\n            path=\"/admin/productlist\"\n            component={ProductListScreen}\n            exact\n          />\n          <Route\n            path=\"/admin/productlist/:pageNumber\"\n            component={ProductListScreen}\n            exact\n          />\n          <Route path=\"/admin/userlist\" component={UserListScreen} />\n          <Route path=\"/admin/orderlist\" component={OrderListScreen} />\n          <Route path=\"/admin/users/:id/edit\" component={UserEditScreen} />\n          <Route path=\"/\" component={HomeScreen} exact />\n          <Route path=\"/search/:keyword\" component={HomeScreen} exact />\n          <Route path=\"/page/:pageNumber\" component={HomeScreen} exact />\n          <Route\n            path=\"/search/:keyword/page/:pageNumber\"\n            component={HomeScreen}\n            exact\n          />\n          {/* the exact param disables partial matching for a route, and returns the exact path, \n          in case of routes with similar names\n          */}\n          <Route\n            path=\"/admin/products/:id/edit\"\n            component={ProductEditScreen}\n          />\n          <Route path=\"/order/:id\" component={OrderScreen} />\n          <Route path=\"/product/:id\" component={ProductScreen} />\n          <Route path=\"/cart/:id?\" component={CartScreen} />\n          {/* the ? makes it optional */}\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport {\n  productListReducer,\n  productDetailsReducer,\n  productDeleteReducer,\n  productCreateReducer,\n  productUpdateReducer,\n  productReviewCreateReducer,\n  productTopRatedReducer,\n} from './reducers/productReducer';\nimport { cartReducer } from './reducers/cartReducers';\nimport {\n  userLoginReducer,\n  userRegisterReducer,\n  userDetailsReducer,\n  userUpdateProfileReducer,\n  userListReducer,\n  userDeleteReducer,\n  userUpdateReducer,\n} from './reducers/userReducers';\nimport {\n  orderCreateReducer,\n  orderDetailsReducer,\n  orderPayReducer,\n  orderDeliverReducer,\n  orderListMyReducer,\n  orderAllReducer,\n} from './reducers/orderReducers';\n\n// ! whenever you create a reducer, import it to ur store\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  productReviewCreate: productReviewCreateReducer,\n  productTopRated: productTopRatedReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderListMy: orderListMyReducer,\n  orderListAll: orderAllReducer,\n  orderDeliver: orderDeliverReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n});\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\n  ? JSON.parse(localStorage.getItem('cartItems'))\n  : [];\n\nconst userInfoFromStorage = localStorage.getItem('userInfo')\n  ? JSON.parse(localStorage.getItem('userInfo'))\n  : null;\n\nconst userDetailsFromStorage = localStorage.getItem('userDetails')\n  ? JSON.parse(localStorage.getItem('userDetails'))\n  : null;\n\nconst shippingAddresFromStorage = localStorage.getItem('shippingAddress')\n  ? JSON.parse(localStorage.getItem('shippingAddress'))\n  : {};\n\nconst middleware = [thunk];\n\n// * our base initial state\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddresFromStorage,\n  },\n  userLogin: { userInfo: userInfoFromStorage },\n  userDetails: { userDetailsFromStorage },\n};\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import {\n  PRODUCT_LIST_FAILURE,\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_DETAILS_FAILURE,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_DELETE_FAILURE,\n  PRODUCT_DELETE_REQUEST,\n  PRODUCT_DELETE_SUCCESS,\n  PRODUCT_CREATE_RESET,\n  PRODUCT_CREATE_FAILURE,\n  PRODUCT_CREATE_REQUEST,\n  PRODUCT_CREATE_SUCCESS,\n  PRODUCT_UPDATE_FAILURE,\n  PRODUCT_UPDATE_REQUEST,\n  PRODUCT_UPDATE_RESET,\n  PRODUCT_UPDATE_SUCCESS,\n  PRODUCT_CREATE_REVIEW_FAILURE,\n  PRODUCT_CREATE_REVIEW_REQUEST,\n  PRODUCT_CREATE_REVIEW_RESET,\n  PRODUCT_CREATE_REVIEW_SUCCESS,\n  PRODUCT_TOP_FAILURE,\n  PRODUCT_TOP_REQUEST,\n  PRODUCT_TOP_SUCCESS,\n} from '../constants/productConstants';\n\n// !reducers take the initial state, and the action\n// Here is the reducer for getting all products\nexport const productListReducer = (state = { products: [] }, action) => {\n  // ? evaluate type in the product object\n  switch (action.type) {\n    case PRODUCT_LIST_REQUEST:\n      return { loading: true, products: [] };\n    case PRODUCT_LIST_SUCCESS:\n      return {\n        loading: false,\n        products: action.payload.products,\n        pages: action.payload.pages,\n        page: action.payload.page,\n      };\n    case PRODUCT_LIST_FAILURE:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\n// here is the reducer for getting a single product\nexport const productDetailsReducer = (\n  state = { product: { reviews: [] } },\n  action\n) => {\n  // ? evaluate type in the product object\n  switch (action.type) {\n    case PRODUCT_DETAILS_REQUEST:\n      return { loading: true, ...state };\n    case PRODUCT_DETAILS_SUCCESS:\n      return { loading: false, product: action.payload };\n    case PRODUCT_DETAILS_FAILURE:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const productDeleteReducer = (state = {}, action) => {\n  // ? evaluate type in the product object\n  switch (action.type) {\n    case PRODUCT_DELETE_REQUEST:\n      return { loading: true };\n    case PRODUCT_DELETE_SUCCESS:\n      return { loading: false, success: true };\n    case PRODUCT_DELETE_FAILURE:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const productCreateReducer = (state = {}, action) => {\n  // ? evaluate type in the product object\n  switch (action.type) {\n    case PRODUCT_CREATE_REQUEST:\n      return { loading: true };\n    case PRODUCT_CREATE_SUCCESS:\n      return { loading: false, success: true, product: action.payload };\n    case PRODUCT_CREATE_FAILURE:\n      return { loading: false, error: action.payload };\n    case PRODUCT_CREATE_RESET:\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport const productUpdateReducer = (state = { product: {} }, action) => {\n  // ? evaluate type in the product object\n  switch (action.type) {\n    case PRODUCT_UPDATE_REQUEST:\n      return { loading: true };\n    case PRODUCT_UPDATE_SUCCESS:\n      return { loading: false, success: true, product: action.payload };\n    case PRODUCT_UPDATE_FAILURE:\n      return { loading: false, error: action.payload };\n    case PRODUCT_UPDATE_RESET:\n      return { product: {} };\n    default:\n      return state;\n  }\n};\n\nexport const productReviewCreateReducer = (state = { product: {} }, action) => {\n  // ? evaluate type in the product object\n  switch (action.type) {\n    case PRODUCT_CREATE_REVIEW_REQUEST:\n      return { loading: true };\n    case PRODUCT_CREATE_REVIEW_SUCCESS:\n      return { loading: false, success: true };\n    case PRODUCT_CREATE_REVIEW_FAILURE:\n      return { loading: false, error: action.payload };\n    case PRODUCT_CREATE_REVIEW_RESET:\n      return { product: {} };\n    default:\n      return state;\n  }\n};\n\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\n  // ? evaluate type in the product object\n  switch (action.type) {\n    case PRODUCT_TOP_REQUEST:\n      return { loading: true, products: [] };\n    case PRODUCT_TOP_SUCCESS:\n      return { loading: false, products: action.payload };\n    case PRODUCT_TOP_FAILURE:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n","import {\n  CART_ADD_ITEM,\n  CART_REMOVE_ITEM,\n  CART_SAVE_SHIPPING_ADDRESS,\n  CART_SAVE_PAYMENT_METHOD,\n} from '../constants/cartConstants';\n\nexport const cartReducer = (\n  state = { cartItems: [], shippingAddress: {} },\n  action\n) => {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload;\n\n      const existItem = state.cartItems.find((x) => x.product === item.product);\n\n      if (existItem) {\n        return {\n          ...state,\n          cartItems: state.cartItems.map((x) =>\n            x.product === existItem.product ? item : x\n          ),\n        };\n      } else {\n        return {\n          ...state,\n          cartItems: [...state.cartItems, item],\n        };\n      }\n    case CART_REMOVE_ITEM:\n      return {\n        ...state,\n        cartItems: state.cartItems.filter(\n          (item) => item.product !== action.payload\n        ),\n      };\n    case CART_SAVE_SHIPPING_ADDRESS:\n      return {\n        ...state,\n        shippingAddress: action.payload,\n      };\n    case CART_SAVE_PAYMENT_METHOD:\n      return {\n        ...state,\n        paymentMethod: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","import {\n  USER_LOGIN_FAILURE,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_SUCCESS,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_FAILURE,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_SUCCESS,\n  USER_DETAILS_FAILURE,\n  USER_UPDATE_PROFILE_RESET,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_UPDATE_PROFILE_FAILURE,\n  USER_DETAILS_RESET,\n  USER_LIST_FAILURE,\n  USER_LIST_REQUEST,\n  USER_LIST_SUCCESS,\n  USER_LIST_RESET,\n  USER_DELETE_FAILURE,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_UPDATE_FAILURE,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_RESET,\n  USER_UPDATE_SUCCESS,\n} from '../constants/userConstants';\n\nexport const userLoginReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_LOGIN_REQUEST:\n      return { loading: true };\n    case USER_LOGIN_SUCCESS:\n      return { loading: false, userInfo: action.payload };\n    case USER_LOGIN_FAILURE:\n      return { loading: false, error: action.payload };\n    case USER_LOGOUT:\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport const userRegisterReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_REGISTER_REQUEST:\n      return { loading: true };\n    case USER_REGISTER_SUCCESS:\n      return { loading: false, userInfo: action.payload };\n    case USER_REGISTER_FAILURE:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const userDetailsReducer = (state = { user: {} }, action) => {\n  switch (action.type) {\n    case USER_DETAILS_REQUEST:\n      return { ...state, loading: true };\n    case USER_DETAILS_SUCCESS:\n      return { loading: false, user: action.payload };\n    case USER_DETAILS_FAILURE:\n      return { loading: false, error: action.payload };\n    case USER_DETAILS_RESET:\n      return { user: {} };\n    default:\n      return state;\n  }\n};\n\nexport const userUpdateProfileReducer = (state = { user: {} }, action) => {\n  switch (action.type) {\n    case USER_UPDATE_PROFILE_REQUEST:\n      return { loading: true };\n    case USER_UPDATE_PROFILE_SUCCESS:\n      return { loading: false, success: true, userInfo: action.payload };\n    case USER_UPDATE_PROFILE_FAILURE:\n      return { loading: false, error: action.payload };\n    // case USER_UPDATE_PROFILE_RESET:\n    //   return {}\n    default:\n      return state;\n  }\n};\n\nexport const userListReducer = (state = { users: [] }, action) => {\n  switch (action.type) {\n    case USER_LIST_REQUEST:\n      return { loading: true };\n    case USER_LIST_SUCCESS:\n      return { loading: false, users: action.payload };\n    case USER_LIST_FAILURE:\n      return { loading: false, error: action.payload };\n    case USER_LIST_RESET: {\n      return {\n        users: [],\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport const userDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_DELETE_REQUEST:\n      return { loading: true };\n    case USER_DELETE_SUCCESS:\n      return { loading: false, succcess: true };\n    case USER_DELETE_FAILURE:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const userUpdateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_UPDATE_REQUEST:\n      return { loading: true };\n    case USER_UPDATE_SUCCESS:\n      return { loading: false, succcess: true };\n    case USER_UPDATE_FAILURE:\n      return { loading: false, error: action.payload };\n    case USER_UPDATE_RESET: {\n      return {\n        user: {},\n      };\n    }\n    default:\n      return state;\n  }\n};\n","import {\n  ORDER_CREATE_FAILURE,\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_DETAILS_FAILURE,\n  ORDER_DETAILS_REQUEST,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_PAY_RESET,\n  ORDER_PAY_SUCCESS,\n  ORDER_PAY_FAILURE,\n  ORDER_PAY_REQUEST,\n  ORDER_LIST_MY_FAILURE,\n  ORDER_LIST_MY_REQUEST,\n  ORDER_LIST_MY_SUCCESS,\n  ORDER_LIST_MY_RESET,\n  ORDER_ALL_FAILURE,\n  ORDER_ALL_SUCCESS,\n  ORDER_ALL_REQUEST,\n  ORDER_DELIVER_FAILURE,\n  ORDER_DELIVER_REQUEST,\n  ORDER_DELIVER_SUCCESS,\n  ORDER_DELIVER_RESET,\n} from '../constants/orderConstants';\n\nexport const orderCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_CREATE_REQUEST:\n      return {\n        loading: true,\n      };\n    case ORDER_CREATE_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n        order: action.payload,\n      };\n    case ORDER_CREATE_FAILURE:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const orderDetailsReducer = (\n  state = {\n    loading: true,\n    orderItems: [],\n    shippingAddress: {},\n  },\n  action\n) => {\n  switch (action.type) {\n    case ORDER_DETAILS_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      };\n    case ORDER_DETAILS_SUCCESS:\n      return {\n        loading: false,\n        order: action.payload,\n      };\n    case ORDER_DETAILS_FAILURE:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const orderPayReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_PAY_REQUEST:\n      return {\n        loading: true,\n        success: false,\n      };\n    case ORDER_PAY_SUCCESS:\n      return {\n        loading: false,\n        succcess: true,\n      };\n    case ORDER_PAY_FAILURE:\n      return {\n        loading: false,\n        success: false,\n      };\n    case ORDER_PAY_RESET:\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\n  switch (action.type) {\n    case ORDER_LIST_MY_REQUEST:\n      return {\n        loading: true,\n      };\n    case ORDER_LIST_MY_SUCCESS:\n      return {\n        loading: false,\n        orders: action.payload,\n      };\n    case ORDER_LIST_MY_FAILURE:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n    case ORDER_LIST_MY_RESET:\n      return { orders: [] };\n    default:\n      return state;\n  }\n};\n\nexport const orderDeliverReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_DELIVER_REQUEST:\n      return {\n        loading: true,\n        success: false,\n      };\n    case ORDER_DELIVER_SUCCESS:\n      return {\n        loading: false,\n        succcess: true,\n      };\n    case ORDER_DELIVER_FAILURE:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n    case ORDER_DELIVER_RESET:\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport const orderAllReducer = (state = { orders: [] }, action) => {\n  switch (action.type) {\n    case ORDER_ALL_REQUEST:\n      return {\n        loading: true,\n      };\n    case ORDER_ALL_SUCCESS:\n      return {\n        loading: false,\n        orders: action.payload,\n      };\n    case ORDER_ALL_FAILURE:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './bootstrap.min(1).css'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux'\nimport store from './store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}